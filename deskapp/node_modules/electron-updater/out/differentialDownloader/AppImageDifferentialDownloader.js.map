{"version":3,"file":"AppImageDifferentialDownloader.js","sourceRoot":"","sources":["../../src/differentialDownloader/AppImageDifferentialDownloader.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,AAAO,AAAE,AAAsB,AAAE,AAAY,AAAE,AAAM,AAA0B,AAE/E,AAAM;;;;MAAsC,AAAQ,AAAsB;AAClE,AAAQ,YAAd,AAAK,CAAU,AAAqB;;;;AAClC,kBAAM,AAAW,cAAG,AAAI,MAAC,AAAkB;AAC3C,kBAAM,AAAQ,WAAG,AAAW,YAAC,AAAM;AACnC,kBAAM,AAAM,SAAG,AAAQ,AAAG,YAAC,AAAW,YAAC,AAAc,eAAG,AAAC,AAAC;AAC1D,AAAI,kBAAC,AAAkB,qBAAG,MAAM,AAAI,MAAC,AAAe,gBAAC,AAAM,QAAE,AAAQ,WAAG,AAAC,AAAC;AAC1E,kBAAM,AAAW,cAAG,MAAM,AAAY,8EAAC,AAAI,MAAC,AAAkB,mBAAC,AAAK,MAAC,AAAC,GAAE,AAAI,MAAC,AAAkB,mBAAC,AAAM,SAAG,AAAC,AAAC,AAAC;AAC5G,kBAAM,AAAI,MAAC,AAAU,WAAC,AAAW,aAAE,AAAW,AAAC,AACjD;;AAAC,AACF","sourcesContent":["import { BlockMap } from \"builder-util-runtime/out/blockMapApi\"\nimport { DifferentialDownloader, readBlockMap } from \"./DifferentialDownloader\"\n\nexport class AppImageDifferentialDownloader extends DifferentialDownloader {\n  async download(oldBlockMap: BlockMap) {\n    const packageInfo = this.blockAwareFileInfo\n    const fileSize = packageInfo.size!!\n    const offset = fileSize - (packageInfo.blockMapSize!! + 4)\n    this.fileMetadataBuffer = await this.readRemoteBytes(offset, fileSize - 1)\n    const newBlockMap = await readBlockMap(this.fileMetadataBuffer.slice(0, this.fileMetadataBuffer.length - 4))\n    await this.doDownload(oldBlockMap, newBlockMap)\n  }\n}"]}
